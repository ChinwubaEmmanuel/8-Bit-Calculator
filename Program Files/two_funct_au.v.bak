module twofunct_au (    //name the module
input [7:0] A, //declare input ports
input Cin, reset, LoadA, LoadB, LoadR,
output a1,b1,c1,d1,e1,f1,g1,a2,b2,c2,d2,e2,f2,g2,a3,b3,c3,d3,e3,f3,g3,a4,b4,c4,d4,e4,f4,g4,a5,b5,c5,d5,e5,f5,g5,a6,b6,c6,d6,e6,f6,g6, Cout
);
wire [7:0] out_reg, S, D, E; //declare carry-out port

MUX_reg
(
	.y(D) ,	// output [7:0] y_sig
	.a(A) ,	// input [7:0] a_sig
	.load(LoadA) ,	// input  load_sig
	.clear(reset) 	// input  clear_sig
);
MUX_reg
(
	.y(E) ,	// output [7:0] y_sig
	.a(A) ,	// input [7:0] a_sig
	.load(LoadB) ,	// input  load_sig
	.clear(reset) 	// input  clear_sig
);

eightbit_ripplecarryadder
(
	.A(D) ,	// input [7:0] A_sig
	.B(E) ,	// input [7:0] B_sig
	.Cin(Cin) ,	// input  Cin_sig
	.S(S) ,	// output [7:0] S_sig
	.Cout(Cout) 	// output  Cout_sig
);
MUX_reg
(
	.y(out_reg) ,	// output [7:0] y_sig
	.a(S) ,	// input [7:0] a_sig
	.load(LoadR) ,	// input  load_sig
	.clear(reset) 	// input  clear_sig
);

endmodule
